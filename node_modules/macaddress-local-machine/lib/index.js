"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.first = exports.all = void 0;
const os_1 = __importDefault(require("os"));
function createMacAddressGetter(all, throwErrorIfNoneFound) {
    const networkInterfaces = os_1.default.networkInterfaces();
    let macAddresses = undefined;
    for (const interfaceKey in networkInterfaces) {
        if (!networkInterfaces.hasOwnProperty(interfaceKey)) {
            continue;
        }
        const networkInterface = networkInterfaces[interfaceKey];
        if (!networkInterface) {
            continue;
        }
        for (const interfaceInfo of networkInterface) {
            if (!interfaceInfo.internal) {
                const address = {
                    iface: interfaceKey,
                    macAddr: interfaceInfo.mac
                };
                if (!all) {
                    return address;
                }
                else if (macAddresses === undefined) {
                    macAddresses = [];
                }
                macAddresses.push(address);
            }
        }
    }
    if (throwErrorIfNoneFound && !macAddresses?.length) {
        throw new Error("No local MAC addresses found");
    }
    else if (all && macAddresses === undefined) {
        return [];
    }
    return macAddresses;
}
function all(throwErrorIfNoneFound = true) {
    return createMacAddressGetter(true, throwErrorIfNoneFound);
}
exports.all = all;
function first(throwErrorIfNoneFound = true) {
    if (throwErrorIfNoneFound) {
        return createMacAddressGetter(false, true);
    }
    else {
        return createMacAddressGetter(false, false);
    }
}
exports.first = first;
exports.default = {
    first,
    all
};
